

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 04 22:41:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0039                     _RC1	set	57
   168  0038                     _RC0	set	56
   169  0040                     _RD0	set	64
   170  0440                     _TRISD0	set	1088
   171  0438                     _TRISC0	set	1080
   172                           
   173                           	psect	cinit
   174  07FA                     start_initialization:	
   175                           ; #config settings
   176                           
   177  07FA                     __initialization:
   178                           
   179                           ; Clear objects allocated to COMMON
   180  07FA  01F8               	clrf	__pbssCOMMON& (0+127)
   181  07FB  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   182  07FC                     end_of_initialization:	
   183                           ;End of C runtime variable initialization code
   184                           
   185  07FC                     __end_of__initialization:
   186  07FC  0183               	clrf	3
   187  07FD  120A  118A  2FB0   	ljmp	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMMON
   190  0078                     __pbssCOMMON:
   191  0078                     _var:
   192  0078                     	ds	2
   193                           
   194                           	psect	cstackCOMMON
   195  0070                     __pcstackCOMMON:
   196  0070                     ?_incrementa:
   197  0070                     ??_incrementa:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ?_decrementa:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ??_decrementa:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ?_ten:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ??_ten:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     ?_main:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 2 bytes @ 0x0
   217  0070                     	ds	3
   218  0073                     ??_main:
   219                           
   220                           ; 1 bytes @ 0x3
   221  0073                     	ds	3
   222  0076                     main@var:
   223                           
   224                           ; 2 bytes @ 0x6
   225  0076                     	ds	2
   226                           
   227                           	psect	maintext
   228  07B0                     __pmaintext:	
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 16 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  var             2    6[COMMON] int 
   239 ;; Return value:  Size  Location     Type
   240 ;;                  2   24[None  ] int 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, pclath, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : B00/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   248 ;;      Params:         0       0       0       0       0
   249 ;;      Locals:         2       0       0       0       0
   250 ;;      Temps:          3       0       0       0       0
   251 ;;      Totals:         5       0       0       0       0
   252 ;;Total ram usage:        5 bytes
   253 ;; Hardware stack levels required when called:    1
   254 ;; This function calls:
   255 ;;		_decrementa
   256 ;;		_incrementa
   257 ;;		_ten
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           
   264                           ;psect for function _main
   265  07B0                     _main:
   266  07B0                     l648:	
   267                           ;incstack = 0
   268                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   269                           
   270                           
   271                           ;main.c: 18:     TRISC0 = 1;
   272  07B0  1683               	bsf	3,5	;RP0=1, select bank1
   273  07B1  1303               	bcf	3,6	;RP1=0, select bank1
   274  07B2  1407               	bsf	7,0	;volatile
   275                           
   276                           ;main.c: 19:     TRISD0 = 0;
   277  07B3  1008               	bcf	8,0	;volatile
   278                           
   279                           ;main.c: 20:     RD0 = 0;
   280  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   281  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   282  07B6  1008               	bcf	8,0	;volatile
   283                           
   284                           ;main.c: 21:     RC0 = 0;
   285  07B7  1007               	bcf	7,0	;volatile
   286  07B8                     l650:
   287                           
   288                           ;main.c: 22:     int var = 0;
   289  07B8  01F6               	clrf	main@var
   290  07B9  01F7               	clrf	main@var+1
   291  07BA                     l652:
   292                           
   293                           ;main.c: 26:     {;main.c: 27:         if(RC0 == 1)
   294  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   295  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   296  07BC  1C07               	btfss	7,0	;volatile
   297  07BD  2FBF               	goto	u11
   298  07BE  2FC0               	goto	u10
   299  07BF                     u11:
   300  07BF  2FC5               	goto	l656
   301  07C0                     u10:
   302  07C0                     l654:
   303                           
   304                           ;main.c: 28:         {;main.c: 29:             incrementa();
   305  07C0  120A  118A  2791  120A  118A  	fcall	_incrementa
   306  07C5                     l656:
   307                           
   308                           ;main.c: 31:         if(RC1 == 1)
   309  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   310  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   311  07C7  1C87               	btfss	7,1	;volatile
   312  07C8  2FCA               	goto	u21
   313  07C9  2FCB               	goto	u20
   314  07CA                     u21:
   315  07CA  2FD0               	goto	l660
   316  07CB                     u20:
   317  07CB                     l658:
   318                           
   319                           ;main.c: 32:         {;main.c: 33:             decrementa();
   320  07CB  120A  118A  2788  120A  118A  	fcall	_decrementa
   321  07D0                     l660:
   322                           
   323                           ;main.c: 35:         if(var == 10)
   324  07D0  300A               	movlw	10
   325  07D1  0676               	xorwf	main@var,w
   326  07D2  0477               	iorwf	main@var+1,w
   327  07D3  1D03               	btfss	3,2
   328  07D4  2FD6               	goto	u31
   329  07D5  2FD7               	goto	u30
   330  07D6                     u31:
   331  07D6  2FDC               	goto	l664
   332  07D7                     u30:
   333  07D7                     l662:
   334                           
   335                           ;main.c: 36:         {;main.c: 37:            ten();
   336  07D7  120A  118A  279A  120A  118A  	fcall	_ten
   337  07DC                     l664:
   338                           
   339                           ;main.c: 39:         if (var == 10)
   340  07DC  300A               	movlw	10
   341  07DD  0676               	xorwf	main@var,w
   342  07DE  0477               	iorwf	main@var+1,w
   343  07DF  1D03               	btfss	3,2
   344  07E0  2FE2               	goto	u41
   345  07E1  2FE3               	goto	u40
   346  07E2                     u41:
   347  07E2  2FBA               	goto	l652
   348  07E3                     u40:
   349  07E3                     l666:
   350                           
   351                           ;main.c: 40:         {;main.c: 41:             RD0 = 1;
   352  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   353  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   354  07E5  1408               	bsf	8,0	;volatile
   355  07E6                     l668:
   356                           
   357                           ;main.c: 42:             _delay((unsigned long)((200)*(4000000/4000.0)));
   358  07E6  3002               	movlw	2
   359  07E7  00F5               	movwf	??_main+2
   360  07E8  3004               	movlw	4
   361  07E9  00F4               	movwf	??_main+1
   362  07EA  30BA               	movlw	186
   363  07EB  00F3               	movwf	??_main
   364  07EC                     u57:
   365  07EC  0BF3               	decfsz	??_main,f
   366  07ED  2FEC               	goto	u57
   367  07EE  0BF4               	decfsz	??_main+1,f
   368  07EF  2FEC               	goto	u57
   369  07F0  0BF5               	decfsz	??_main+2,f
   370  07F1  2FEC               	goto	u57
   371  07F2  0000               	nop
   372  07F3                     l670:
   373                           
   374                           ;main.c: 43:             RD0 = 0;
   375  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   376  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   377  07F5  1008               	bcf	8,0	;volatile
   378  07F6  2FB8               	goto	l650
   379  07F7  120A  118A  2800   	ljmp	start
   380  07FA                     __end_of_main:
   381                           
   382                           	psect	text1
   383  079A                     __ptext1:	
   384 ;; *************** function _ten *****************
   385 ;; Defined at:
   386 ;;		line 58 in file "main.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0
   402 ;;      Temps:          3       0       0       0       0
   403 ;;      Totals:         3       0       0       0       0
   404 ;;Total ram usage:        3 bytes
   405 ;; Hardware stack levels used:    1
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           
   414                           ;psect for function _ten
   415  079A                     _ten:
   416  079A                     l640:	
   417                           ;incstack = 0
   418                           ; Regs used in _ten: [wreg+status,2]
   419                           
   420                           
   421                           ;main.c: 59:     RD0 = 1;
   422  079A  1283               	bcf	3,5	;RP0=0, select bank0
   423  079B  1303               	bcf	3,6	;RP1=0, select bank0
   424  079C  1408               	bsf	8,0	;volatile
   425  079D                     l642:
   426                           
   427                           ;main.c: 60:     _delay((unsigned long)((200)*(4000000/4000.0)));
   428  079D  3002               	movlw	2
   429  079E  00F2               	movwf	??_ten+2
   430  079F  3004               	movlw	4
   431  07A0  00F1               	movwf	??_ten+1
   432  07A1  30BA               	movlw	186
   433  07A2  00F0               	movwf	??_ten
   434  07A3                     u67:
   435  07A3  0BF0               	decfsz	??_ten,f
   436  07A4  2FA3               	goto	u67
   437  07A5  0BF1               	decfsz	??_ten+1,f
   438  07A6  2FA3               	goto	u67
   439  07A7  0BF2               	decfsz	??_ten+2,f
   440  07A8  2FA3               	goto	u67
   441  07A9  0000               	nop
   442  07AA                     l644:
   443                           
   444                           ;main.c: 61:     RD0 = 0;
   445  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   446  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   447  07AC  1008               	bcf	8,0	;volatile
   448  07AD                     l646:
   449                           
   450                           ;main.c: 62:     var = 0;
   451  07AD  01F8               	clrf	_var
   452  07AE  01F9               	clrf	_var+1
   453  07AF                     l41:
   454  07AF  0008               	return
   455  07B0                     __end_of_ten:
   456                           
   457                           	psect	text2
   458  0791                     __ptext2:	
   459 ;; *************** function _incrementa *****************
   460 ;; Defined at:
   461 ;;		line 50 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   475 ;;      Params:         0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           
   489                           ;psect for function _incrementa
   490  0791                     _incrementa:
   491  0791                     l636:	
   492                           ;incstack = 0
   493                           ; Regs used in _incrementa: [wreg+status,2+status,0]
   494                           
   495                           
   496                           ;main.c: 51:     var = var + 1;
   497  0791  0878               	movf	_var,w
   498  0792  3E01               	addlw	1
   499  0793  00F8               	movwf	_var
   500  0794  0879               	movf	_var+1,w
   501  0795  1803               	skipnc
   502  0796  3E01               	addlw	1
   503  0797  3E00               	addlw	0
   504  0798  00F9               	movwf	_var+1
   505  0799                     l35:
   506  0799  0008               	return
   507  079A                     __end_of_incrementa:
   508                           
   509                           	psect	text3
   510  0788                     __ptext3:	
   511 ;; *************** function _decrementa *****************
   512 ;; Defined at:
   513 ;;		line 54 in file "main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   527 ;;      Params:         0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0
   530 ;;      Totals:         0       0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           
   541                           ;psect for function _decrementa
   542  0788                     _decrementa:
   543  0788                     l638:	
   544                           ;incstack = 0
   545                           ; Regs used in _decrementa: [wreg+status,2+status,0]
   546                           
   547                           
   548                           ;main.c: 55:     var = var - 1;
   549  0788  0878               	movf	_var,w
   550  0789  3EFF               	addlw	255
   551  078A  00F8               	movwf	_var
   552  078B  0879               	movf	_var+1,w
   553  078C  1803               	skipnc
   554  078D  3E01               	addlw	1
   555  078E  3EFF               	addlw	255
   556  078F  00F9               	movwf	_var+1
   557  0790                     l38:
   558  0790  0008               	return
   559  0791                     __end_of_decrementa:
   560  007E                     btemp	set	126	;btemp
   561  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ten

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      30
                                              3 COMMON     5     5      0
                         _decrementa
                         _incrementa
                                _ten
 ---------------------------------------------------------------------------------
 (1) _ten                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _incrementa                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decrementa                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _decrementa
   _incrementa
   _ten

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 04 22:41:53 2021

                     l41 07AF                       l35 0799                       l38 0790  
                     u10 07C0                       u11 07BF                       u20 07CB  
                     u21 07CA                       u30 07D7                       u31 07D6  
                     u40 07E3                       u41 07E2                       u57 07EC  
                     u67 07A3                      l640 079A                      l642 079D  
                    l650 07B8                      l636 0791                      l644 07AA  
                    l660 07D0                      l652 07BA                      l638 0788  
                    l646 07AD                      l670 07F3                      l662 07D7  
                    l654 07C0                      l664 07DC                      l656 07C5  
                    l648 07B0                      l666 07E3                      l658 07CB  
                    l668 07E6                      _RC0 0038                      _RC1 0039  
                    _RD0 0040                      _ten 079A                      _var 0078  
                   ?_ten 0070                     _main 07B0                     btemp 007E  
                   start 0000                    ??_ten 0070                    ?_main 0070  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 07FA                   ??_main 0073                   _TRISC0 0438  
                 _TRISD0 0440  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             _decrementa 0788               __pmaintext 07B0               _incrementa 0791  
                __ptext1 079A                  __ptext2 0791                  __ptext3 0788  
           __size_of_ten 0016                  main@var 0076     end_of_initialization 07FC  
            ?_decrementa 0070              ?_incrementa 0070      __size_of_decrementa 0009  
    start_initialization 07FA              __end_of_ten 07B0              __pbssCOMMON 0078  
              ___latbits 0002      __size_of_incrementa 0009             ??_decrementa 0070  
     __end_of_decrementa 0791             ??_incrementa 0070       __end_of_incrementa 079A  
          __size_of_main 004A  
